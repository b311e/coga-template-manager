#!/usr/bin/env bash
# OpenXML Pack Alias
# Usage: pack <source directory> [output file]
# If output file is not provided, it will be auto-generated in the out folder

set -euo pipefail

if [ $# -lt 1 ]; then
    echo "Usage: pack <source directory> [output file]"
    echo "Example: pack builds/jbc/workspace/jbcNormal/in"
    echo "Example: pack builds/jbc/templates/jbcMemo/in"
    echo "Example: pack builds/jbc/workspace/jbcSheet/in builds/jbc/workspace/jbcSheet/out/CustomSheet.xltx"
    exit 1
fi

# Get the script directory to find the project
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

SOURCE_DIR="$1"

# If no output file specified, auto-generate one in template's out folder
if [ $# -eq 1 ]; then
    # Extract template info from path (e.g., builds/jbc/workspace/jbcNormal/in or builds/jbc/templates/jbcMemo/in)
    if [[ "$SOURCE_DIR" =~ builds/([^/]+)/([^/]+)/([^/]+)/in ]]; then
        AGENCY="${BASH_REMATCH[1]}"
        CATEGORY="${BASH_REMATCH[2]}"
        TEMPLATE="${BASH_REMATCH[3]}"
        
        # Determine file extension and name based on template type
        if [[ "$TEMPLATE" == *"Normal"* ]]; then
            EXT="dotm"
            FILENAME="Normal.$EXT"
        elif [[ "$TEMPLATE" == *"Sheet"* ]]; then
            EXT="xltx"
            FILENAME="Sheet.$EXT"
        elif [[ "$TEMPLATE" == *"Book"* ]]; then
            EXT="xltx"
            FILENAME="Book.$EXT"
        elif [[ "$TEMPLATE" == *"Theme"* ]]; then
            EXT="thmx"
            FILENAME="${TEMPLATE}.$EXT"
        elif [[ "$TEMPLATE" == *"Letterhead"* ]] || [[ "$TEMPLATE" == *"Memo"* ]] || [[ "$TEMPLATE" == *"Form"* ]]; then
            EXT="dotx"
            FILENAME="${TEMPLATE}.$EXT"
        else
            EXT="dotx"  # Default to Word template
            FILENAME="${TEMPLATE}.$EXT"
        fi
        
        # Create template's out directory if it doesn't exist
        OUT_DIR="builds/$AGENCY/$CATEGORY/$TEMPLATE/out"
        mkdir -p "$OUT_DIR"
        
        OUTPUT_FILE="$OUT_DIR/$FILENAME"
        echo "Auto-generating: $OUTPUT_FILE"
    else
        echo "Error: Cannot determine template info from path: $SOURCE_DIR"
        echo "Please provide output file manually or use standard path format:"
        echo "  builds/{agency}/{category}/{templateName}/in"
        exit 1
    fi
else
    OUTPUT_FILE="$2"
    # Create directory for output file if needed
    mkdir -p "$(dirname "$OUTPUT_FILE")"
fi

# Run the dotnet command
dotnet run --project "$PROJECT_ROOT/src/OpenXmlApp/OpenXmlApp.csproj" pack "$SOURCE_DIR" "$OUTPUT_FILE"

echo "Packed: $OUTPUT_FILE"